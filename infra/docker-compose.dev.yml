services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: slack-mm
      POSTGRES_USER: slack-mm
      POSTGRES_PASSWORD: slack-mm
    ports:
      - "5432:5432"
    volumes:
      - ../infra/db/init-mattermost.sql:/docker-entrypoint-initdb.d/init-mattermost.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U slack-mm"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "${UVICORN_LOG_LEVEL:-info}", "--access-log"]
    init: true
    stop_signal: SIGTERM
    stop_grace_period: 5s
    # Предотвращение осиротевших процессов
    security_opt:
      - no-new-privileges:true
    # Принудительное завершение при остановке
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+asyncpg://slack-mm:slack-mm@db:5432/slack-mm
      BACKEND_HOST: localhost
      BACKEND_PORT: 8000
      LOG_LEVEL: DEBUG
      UVICORN_LOG_LEVEL: DEBUG
      HTTPX_LOG_LEVEL: DEBUG
      MM_URL: http://mattermost:8065
      MM_TOKEN: 5x7rr788c7gwdnkdr9imb49ffo
      MM_TEAM: test
      EXPORT_WORKERS: 5
      SLACK_VERIFICATION_TOKEN: ${SLACK_VERIFICATION_TOKEN}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ../alembic.ini:/alembic.ini
      - ../backend/app:/app/app
      - ../backend/alembic:/app/alembic
      - ../infra/plugin:/app/infra/plugin:ro
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    # Запуск напрямую без npm-обёртки, чтобы корректно получать сигналы и завершаться
    command: ["npx", "vite", "--host"]
    init: true
    stop_signal: SIGTERM
    stop_grace_period: 5s
    # Предотвращение осиротевших процессов
    security_opt:
      - no-new-privileges:true
    # Принудительное завершение при остановке
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    restart: unless-stopped

  mattermost:
    image: mattermost/mattermost-team-edition:release-10.11
    restart: unless-stopped
    init: true
    stop_signal: SIGTERM
    stop_grace_period: 10s
    # Предотвращение осиротевших процессов
    security_opt:
      - no-new-privileges:true
    # Принудительное завершение при остановке
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    environment:
      - MM_CONFIG=/mattermost/config/mm_config.json
    ports:
      - "8065:8065"
    volumes:
      - ../infra/mattermost/mm_config.json:/mattermost/config/mm_config.json
    depends_on:
      - db 